-- 사원 번호, 사원 이름, 급여 3개의 칼럼으로 구성된 EMP01 테이블을 생성
CREATE TABLE EMP01( 
	EMPNO NUMBER(4), 
	ENAME VARCHAR2(20), 
	SAL NUMBER(7, 2));

-- K-리그 선수들의 정보를 가지고 있는 테이블 
CREATE TABLE PLAYER ( 
PLAYER_ID CHAR(7),
PLAYER_NAME VARCHAR2(20),
TEAM_ID CHAR(3),
E_PLAYER_NAME VARCHAR2(40),
NICKNAME VARCHAR2(30),
JOIN_YYYY CHAR(4),
POSITION VARCHAR2(10),
BACK_NO NUMBER(2),
NATION VARCHAR2(20),
BIRTH_DATE DATE,
SOLAR CHAR(1),
HEIGHT NUMBER(3),
WEIGHT NUMBER(3)); 

-- DEPT01
CREATE TABLE DEPT01( 
	DEPTNO NUMBER(2), 
	DNAME VARCHAR2(14), 
	LOC VARCHAR2(13));

-- 서브쿼리로 테이블 생성
CREATE TABLE EMP02 
AS 
SELECT * FROM EMP;

SELECT * 
FROM EMP02;

CREATE TABLE EMP03 
AS 
SELECT EMPNO, ENAME FROM EMP;

SELECT * 
FROM EMP03;

CREATE TABLE EMP04 
AS 
SELECT EMPNO, ENAME, SAL FROM EMP;

SELECT * 
FROM EMP04;

CREATE TABLE EMP05
AS
SELECT * FROM EMP
WHERE DEPTNO=10;

SELECT *
FROM EMP05;

CREATE TABLE EMP06
AS 
SELECT * FROM EMP WHERE 1=0;

SELECT *
FROM EMP06;


CREATE TABLE DEPT02
AS 
SELECT * FROM DEPT WHERE 1=0;

SELECT *
FROM DEPT02;

-- 컬럼 값을 자동증가 시키기
CREATE TABLE test_01(
	id_col1 NUMBER GENERATED AS IDENTITY PRIMARY KEY,
	col2 varchar2(3),
	col3 varchar2(5));

INSERT INTO test_01(col2, col3) values('001', '0000A');
INSERT INTO test_01(col2, col3) values('002', '0000B');
INSERT INTO test_01(col2, col3) values('003', '0000C');
INSERT INTO test_01(col2, col3) values('004', '0000D');
INSERT INTO test_01(col2, col3) values('005', '0000E');

SELECT *
FROM test_01;


-- EMP01 테이블에 문자 타입의 직급(JOB) 칼럼을 추가
ALTER TABLE EMP01
ADD(JOB VARCHAR2(9)); 

SELECT *
FROM EMP01;

ALTER TABLE DEPT02
ADD(DMGR VARCHAR(4)); 

SELECT *
FROM DEPT02;


-- emp01 테이블의 직급(JOB) 컬럼을 최대 30글자까지 저장할 수 있게 변경
ALTER TABLE EMP01
MODIFY(JOB VARCHAR2(30)); 

ALTER TABLE DEPT02
MODIFY(DMGR NUMBER(4)); 


-- 컬럼 삭제
ALTER TABLE EMP01
DROP COLUMN JOB; 

ALTER TABLE DEPT02
DROP COLUMN DMGR; 


-- 사용 제한
ALTER TABLE EMP02 
SET UNUSED(JOB);

-- 사용 제한한 컬럼을 삭제
ALTER TABLE EMP02 
DROP UNUSED COLUMNS;

-- 테이블 삭제
DROP TABLE EMP01;

SELECT *
FROM EMP01;

-- 테이블의 데이터 삭제
TRUNCATE TABLE EMP02;

SELECT *
FROM EMP02;

-- 이름 변경
RENAME EMP02 TO TEST;

------------------------------------------------------

CREATE TABLE EMP_DEMO
AS 
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,DEPTNO
FROM EMP;

SELECT *
FROM EMP_DEMO;
  
CREATE TABLE EMP_DEPT
AS 
SELECT EMPNO, ENAME, JOB, DNAME, LOC
FROM EMP, DEPT
WHERE EMP.DEPTNO=DEPT.DEPTNO;

SELECT *
FROM EMP_DEPT;

CREATE TABLE EMP_GRADE
AS 
SELECT EMPNO, ENAME, JOB, SAL, COMM, GRADE
FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
ORDER BY GRADE DESC;

SELECT *
FROM EMP_GRADE;
 
ALTER TABLE EMP_GRADE
MODIFY (SAL NUMBER(12,4));

DROP TABLE EMP_DEPT;

DROP TABLE EMP_GRADE;

------------------------------------------------------

INSERT INTO DEPT
VALUES(10, 'TEST', 'SEOUL');

-- DBEAVER에서는 수행 안됨
-- 제약조건 테이블 확인
DESC USER_CONSTRAINTS;

-- 제약조건 조회
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME 
FROM USER_CONSTRAINTS; 

SELECT * 
FROM USER_CONS_COLUMNS;

-- 테이블 생성
CREATE TABLE EMP01( 
	EMPNO NUMBER(4), 
	ENAME VARCHAR2(10), 
	JOB VARCHAR2(9),
	DEPTNO NUMBER(2));

INSERT INTO EMP01
VALUES(NULL, NULL, 'SALESMAN', 30);

SELECT * 
FROM EMP01;

DESC EMP01;

-- NULL 제약조건을 설정한 테이블 생성
CREATE TABLE EMP02( 
	EMPNO NUMBER(4) NOT NULL, 
	ENAME VARCHAR2(10) NOT NULL, 
	JOB VARCHAR2(9),
	DEPTNO NUMBER(2)); 

INSERT INTO EMP02
VALUES(NULL, NULL, 'SALESMAN', 10);

DESC EMP02;

DROP TABLE EMP03;

-- unique 제약 조건 적용
CREATE TABLE EMP03( 
	EMPNO NUMBER(4) UNIQUE,
	ENAME VARCHAR2(10) NOT NULL, 
	JOB VARCHAR2(9),
	DEPTNO NUMBER(2)); 

INSERT INTO EMP03
VALUES(7499, 'ALLEN', 'SALESMAN', 30);

INSERT INTO EMP03
VALUES(7499, 'JONES', 'MANAGER', 20);

INSERT INTO EMP03
VALUES(NULL, 'JONES', 'MANAGER', 20);

INSERT INTO EMP03
VALUES(NULL, 'JONES', 'SALESMAN', 10);


DROP TABLE EMP04;
-- 제약조건 이름 부여
CREATE TABLE EMP04( 
	EMPNO NUMBER(4) CONSTRAINT EMP04_EMPNO_UK UNIQUE,
	ENAME VARCHAR2(10) CONSTRAINT EMP04_ENAME_NN NOT NULL, 
	JOB VARCHAR2(9),
	DEPTNO NUMBER(2));

SELECT TABLE_NAME, CONSTRAINT_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN('EMP04');

-- 기본키 설정
DROP TABLE EMP05;

CREATE TABLE EMP05( 
	EMPNO NUMBER(4) CONSTRAINT EMP05_EMPNO_PK PRIMARY KEY ,
	ENAME VARCHAR2(10) CONSTRAINT EMP05_ENAME_NN NOT NULL, 
	JOB VARCHAR2(9),
	DEPTNO NUMBER(2)
); 

INSERT INTO EMP05
VALUES(7499, 'ALLEN', 'SALESMAN', 30);

INSERT INTO EMP05
VALUES(7499, 'JONES', 'MANAGER', 20);

INSERT INTO EMP05
VALUES(NULL, 'JONES', 'MANAGER', 20);


INSERT INTO EMP(EMPNO, ENAME, DEPTNO)
VALUES(8000, 'SYJ', 50);

-- 제약조건 확인
SELECT TABLE_NAME, CONSTRAINT_TYPE, 
CONSTRAINT_NAME, R_CONSTRAINT_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN ('DEPT', 'EMP');

-- 외래키 제약
DROP TABLE EMP06;

CREATE TABLE EMP06( 
	EMPNO NUMBER(4) CONSTRAINT EMP06_EMPNO_PK PRIMARY KEY ,
	ENAME VARCHAR2(10) CONSTRAINT EMP06_ENAME_NN NOT NULL, 
	JOB VARCHAR2(9),
	DEPTNO NUMBER(2) CONSTRAINT EMP06_DEPTNO_FK REFERENCES DEPT(DEPTNO)
); 

INSERT INTO EMP06
VALUES(7566, 'JONES', 'MANAGER', 50);

CREATE TABLE EMP07( 
	EMPNO NUMBER(4) CONSTRAINT EMP07_EMPNO_PK PRIMARY KEY ,
	ENAME VARCHAR2(10) CONSTRAINT EMP07_ENAME_NN NOT NULL, 
	JOB VARCHAR2(9),
	DEPTNO NUMBER(2)CONSTRAINT EMP07_DEPTNO_FK REFERENCES DEPT(DEPTNO)ON DELETE CASCADE
); 

-- check 제약조건
CREATE TABLE EMP08( 
	EMPNO NUMBER(4) CONSTRAINT EMP08_EMPNO_PK PRIMARY KEY ,
	ENAME VARCHAR2(10) CONSTRAINT EMP08_ENAME_NN NOT NULL, 
	SAL NUMBER(7, 2)CONSTRAINT EMP08_SAL_CK CHECK(SAL BETWEEN 500 AND 5000),
	GENDER VARCHAR2(1) CONSTRAINT EMP08_GENDER_CK CHECK (GENDER IN('M', 'F'))
);

-- DEFAULT
DROP TABLE DEPT01 ;

CREATE TABLE DEPT01(
	DEPTNO NUMBER(2) PRIMARY KEY,
	DNAME VARCHAR2(14),
	LOC VARCHAR2(13) DEFAULT 'SEOUL'
);

INSERT INTO DEPT01(DEPTNO, DNAME)
VALUES(10, 'ACCOUNTING');

SELECT *
FROM DEPT01;

-- 컬럼 레벨 제약조건
CREATE TABLE EMP11( 
	EMPNO NUMBER(4) PRIMARY KEY,
	ENAME VARCHAR2(10) NOT NULL, 
	JOB VARCHAR2(9) UNIQUE,
	DEPTNO NUMBER(4) REFERENCES DEPT(DEPTNO)); 

-- 테이블 레벨 제약 조건
CREATE TABLE EMP12( 
	EMPNO NUMBER(4),
	ENAME VARCHAR2(10) NOT NULL, 
	JOB VARCHAR2(9),
	DEPTNO NUMBER(4),
	PRIMARY KEY(EMPNO),
	UNIQUE(JOB),
	FOREIGN KEY(DEPTNO) REFERENCES DEPT(DEPTNO)
);

-- 제약 조건 이름 사용 
CREATE TABLE EMP13( 
	EMPNO NUMBER(4) CONSTRAINT EMP13_ENAME_NN NOT NULL,
	ENAME VARCHAR2(10), 
	JOB VARCHAR2(9),
	DEPTNO NUMBER(4),
	CONSTRAINT EMP13_EMPNO_PK PRIMARY KEY(EMPNO),
	CONSTRAINT EMP13_JOB_UK UNIQUE(JOB),
	CONSTRAINT EMP13_DEPTNO_FK FOREIGN KEY(DEPTNO) REFERENCES DEPT(DEPTNO)
); 


-- 복합키를 기본키로 사용
CREATE TABLE MEMBER01( 
	NAME VARCHAR2(10),
	ADDRESS VARCHAR2(30),
	HPHONE VARCHAR2(16),
	CONSTRAINT MEMBER01_COMBO_PK PRIMARY KEY(NAME, HPHONE)
);


-- 제약 조건 추가
CREATE TABLE EMP21( 
	EMPNO NUMBER(4), 
	ENAME VARCHAR2(10), 
	JOB VARCHAR2(9),
	DEPTNO NUMBER(4)); 

ALTER TABLE EMP21
ADD CONSTRAINT EMP21_EMPNO_PK PRIMARY KEY(EMPNO);

ALTER TABLE EMP21
ADD CONSTRAINT EMP21_DEPTNO_FK FOREIGN KEY(DEPTNO) REFERENCES DEPT(DEPTNO);

-- 제약조건 수정 
ALTER TABLE EMP21
MODIFY ENAME CONSTRAINT EMP21_ENAME_NN NOT NULL;

-- 제약조건 삭제
ALTER TABLE EMP21
DROP CONSTRAINT EMP21_EMPNO_PK;

ALTER TABLE EMP21
DROP CONSTRAINT EMP21_ENAME_NN;


CREATE TABLE DEPT31(
	DEPTNO NUMBER(2) CONSTRAINT DEPT01_DEPTNO_PK PRIMARY KEY,
	DNAME VARCHAR2(14),
	LOC VARCHAR2(13)
);

CREATE TABLE EMP31( 
	EMPNO NUMBER(4) CONSTRAINT EMP31_EMPNO_PK PRIMARY KEY ,
	ENAME VARCHAR2(10) CONSTRAINT EMP31_ENAME_NN NOT NULL, 
	JOB VARCHAR2(9), 
	DEPTNO NUMBER(4) CONSTRAINT EMP31_DEPTNO_FK REFERENCES DEPT31(DEPTNO)
); 

INSERT INTO DEPT31 VALUES(10, 'ACCOUNT', 'SEOUL');
INSERT INTO DEPT31 VALUES(20, 'SALES', 'MOKPO');


INSERT INTO EMP31 VALUES(7499, 'ALLEN', 'SALESMAN', 10);
INSERT INTO EMP31 VALUES(7369, 'SMITH', 'CLERK', 20);

DELETE FROM DEPT31 WHERE DEPTNO=10;

-- 제약조건 비 활성화
ALTER TABLE EMP31
DISABLE CONSTRAINT EMP31_DEPTNO_FK;

SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, 
TABLE_NAME, R_CONSTRAINT_NAME, STATUS
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='EMP31';

DELETE FROM DEPT31
WHERE DEPTNO=10;

ALTER TABLE EMP31
ENABLE CONSTRAINT EMP31_DEPTNO_FK;

INSERT INTO DEPT31
VALUES(10, 'ACCOUNTING', 'NEW YORK');

SELECT * 
FROM DEPT31;

-- 제약조건 활성화
ALTER TABLE EMP31
ENABLE CONSTRAINT EMP31_DEPTNO_FK;

-- 제약조건 비활성화
ALTER TABLE DEPT31
DISABLE PRIMARY KEY;

ALTER TABLE DEPT31
DISABLE PRIMARY KEY CASCADE;

SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, 
TABLE_NAME, R_CONSTRAINT_NAME, STATUS
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN('DEPT31', 'EMP31');

-- 주석
COMMENT ON TABLE tCity IS '도시 목록'; 
COMMENT ON COLUMN tCity.popu IS '인구';

-- 주석 확인
SELECT COMMENTS 
FROM user_tab_comments 
where table_name = 'TCITY'; 

SELECT * 
FROM user_col_comments 
where table_name = 'TCITY';

-- 데이터 모델링
-- 회원 테이블
CREATE TABLE tMember
(
    member VARCHAR(20) PRIMARY KEY, 	-- 아이디
    age INT NOT NULL,                      	-- 나이 
    email VARCHAR(30) NOT NULL,           	-- 이메일
    addr VARCHAR(50) NOT NULL,            	-- 주소
    money INT DEFAULT 1000 NOT NULL,     	-- 예치금
    grade INT DEFAULT 1 NOT NULL,         	-- 고객등급. 1=준회원, 2=정회원, 3=우수회원
    remark VARCHAR(100) NULL             	-- 메모 사항
);

-- 회원 데이터
INSERT INTO tMember VALUES ('춘향',16,'1004@naver.com','전남 남원시',20000, 2, '');
INSERT INTO tMember VALUES ('이도령',18,'wolf@gmail.com','서울 신사동',150000, 3, '');
INSERT INTO tMember VALUES ('향단',25,'candy@daum.net','전남 남원시',5000, 2, '');
INSERT INTO tMember VALUES ('방자',28,'devlin@ssang.co.kr','서울 개포동',1000, 1, '요주의 고객');


-- 상품 분류 테이블
CREATE TABLE tCategory
(
   category VARCHAR(10) PRIMARY KEY,	-- 분류명
   discount INT NOT NULL,			-- 할인율
   delivery INT NOT NULL,                   	-- 배송비
   takeback CHAR(1)                         	-- 반품 가능성
);

-- 분류 데이터
INSERT INTO tCategory (category, discount, delivery, takeback) VALUES ('식품', 0, 3000, 'n');
INSERT INTO tCategory (category, discount, delivery, takeback) VALUES ('패션', 10, 2000, 'y');
INSERT INTO tCategory (category, discount, delivery, takeback) VALUES ('가전', 20, 2500, 'y');
INSERT INTO tCategory (category, discount, delivery, takeback) VALUES ('성인', 5, 1000, 'n');

-- 상품 테이블
CREATE TABLE tItem
(
    item VARCHAR(20) PRIMARY KEY,   	-- 상품명
    company VARCHAR(20) NULL,            	-- 제조사
    num INT NOT NULL,                      	-- 재고
    price INT NOT NULL,                     	-- 정가
    category VARCHAR(10) NOT NULL,       	-- 분류
    CONSTRAINT item_fk FOREIGN KEY(category) REFERENCES tCategory(category)
);

-- 상품 데이터
INSERT INTO tItem (item,company,num,price,category) VALUES ('노트북', '샘성', 3, 820000, '가전');
INSERT INTO tItem (item,company,num,price,category) VALUES ('청바지', '방방', 80, 32000, '패션');
INSERT INTO tItem (item,company,num,price,category) VALUES ('사과', '문경농원', 24, 16000, '식품');
INSERT INTO tItem (item,company,num,price,category) VALUES ('대추', '보은농원', 19, 15000, '식품');
INSERT INTO tItem (item,company,num,price,category) VALUES ('전자담배', 'TNG', 4, 70000, '성인');
INSERT INTO tItem (item,company,num,price,category) VALUES ('마우스', '논리텍', 3, 90000, '가전');

CREATE TABLE tOrder
(
  orderID INT GENERATED AS IDENTITY PRIMARY KEY,	-- 주문 번호
  member VARCHAR(20) NOT NULL REFERENCES tMember(member),   	-- 주문자
  item VARCHAR(20) NOT NULL REFERENCES tItem(item),			-- 상품
  orderDate DATE DEFAULT SYSDATE NOT NULL,	-- 주문 날자
  num INT NOT NULL,				-- 개수
  status INT DEFAULT 1 NOT NULL,			-- 1:주문, 2:배송중, 3:배송완료, 4:반품
  remark VARCHAR2(1000) NULL			-- 메모 사항
);

-- 주문 데이터
INSERT INTO tOrder (member,item,orderDate,num,status) VALUES ('춘향','청바지',TO_DATE('2019-12-3', 'yyyy/mm/dd'),3,2);
INSERT INTO tOrder (member,item,orderDate,num,status) VALUES ('향단','대추',TO_DATE('2019-12-4', 'yyyy/mm/dd'),10,1);
INSERT INTO tOrder (member,item,orderDate,num,status) VALUES ('방자','전자담배',TO_DATE('2019-12-2', 'yyyy/mm/dd'),4,1);
INSERT INTO tOrder (member,item,orderDate,num,status) VALUES ('향단','사과',TO_DATE('2019-12-5', 'yyyy/mm/dd'),5,2);
INSERT INTO tOrder (member,item,orderDate,num,status) VALUES ('흥부','노트북',TO_DATE('2019-12-5', 'yyyy/mm/dd'),2,1);
INSERT INTO tOrder (member,item,orderDate,num,status) VALUES ('방자','핸드폰',TO_DATE('2019-12-1', 'yyyy/mm/dd'),1,MDSYS.ALL_SDO_INDEX_HISTOGRAM ;

SELECT * FROM torder;
